<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lc.security.user.mapper.UserMapper">

  <resultMap id="BaseResultMap" type="com.lc.security.user.domain.User">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="clear_text" jdbcType="VARCHAR" property="clearText" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="enabled" jdbcType="BIT" property="enabled" />
    <result column="account_non_locked" jdbcType="BIT" property="accountNonLocked" />
    <result column="account_non_expired" jdbcType="BIT" property="accountNonExpired" />
    <result column="credentials_non_expired" jdbcType="BIT" property="credentialsNonExpired" />
  </resultMap>

  <sql id="Base_Column_List">
    id, username, password, clear_text, mobile, enabled, account_non_locked, account_non_expired,
    credentials_non_expired
  </sql>

  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByMobile" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user
    where mobile = #{mobile,jdbcType=VARCHAR}
  </select>
  <select id="selectByUsername" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user
    where username = #{username,jdbcType=VARCHAR}
  </select>
  <select id="selectByPrincipal" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user
    where username = #{principal,jdbcType=VARCHAR} or mobile = #{mobile,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>

  <insert id="insert" parameterType="com.lc.security.user.domain.User">
    insert into user (id, username,
      password, clear_text, mobile,
      enabled, account_non_locked, account_non_expired, credentials_non_expired
      )
    values (#{id,jdbcType=INTEGER}, #{mobile,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR},
      #{password,jdbcType=VARCHAR}, #{clearText,jdbcType=VARCHAR},
      #{enabled,jdbcType=BIT},
      #{accountNonLocked,jdbcType=BIT}, #{accountNonExpired,jdbcType=BIT}, #{credentialsNonExpired,jdbcType=BIT}
      )
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="com.lc.security.user.domain.User">
    update user
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="clearText != null">
        clear_text = #{clearText,jdbcType=VARCHAR}
      </if>
      <if test="mobile != null">
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="enabled != null">
        enabled = #{enabled,jdbcType=BIT},
      </if>
      <if test="accountNonLocked != null">
        account_non_locked = #{accountNonLocked,jdbcType=BIT},
      </if>
      <if test="accountNonExpired != null">
        account_non_expired = #{accountNonExpired,jdbcType=BIT},
      </if>
      <if test="credentialsNonExpired != null">
        credentials_non_expired = #{credentialsNonExpired,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>